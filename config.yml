git_protocol: ssh
aliases:
    pv: pr view
    bugs: issue list --label="bugs"
    epicsBy: issue list --author="$1" --label="epic"
    igrep: '!gh issue list --label="$1" | grep -i $2'
    user: api user
    list-milestones: |-
        !gh api --paginate graphql -F owner=':owner' -F name=':repo' -f query='
              query($per_page: Int = 100, $endCursor: String, $owner: String!, $name: String!) {
                repository(owner: $owner, name: $name) {
                  milestones(first: $per_page, after: $endCursor, states: OPEN, orderBy: {field:CREATED_AT, direction:DESC}) {
                    nodes {
                      title
                      number
                    }
                    pageInfo {
                      hasNextPage
                      endCursor
                    }
                  }
                }
              }
            ' | jq -r ".data.repository.milestones.nodes[] | [.number,.title] | @tsv"
    pr-files-changed: |-
        !gh api --paginate graphql -F owner=':owner' -F name=':repo' -F "pr=$1" -f query='
              query($per_page: Int = 100, $endCursor: String, $pr: Int!, $owner: String!, $name: String!) {
                repository(owner: $owner, name: $name) {
                  pullRequest(number: $pr) {
                    files(first: $per_page, after: $endCursor) {
                      edges {
                        node {
                          path
                        }
                      }
                      pageInfo {
                        endCursor
                        hasNextPage
                      }
                    }
                  }
                }
              }
            ' | jq -r ".data.repository.pullRequest.files.edges[] | [.node.path] | @tsv"
    list-repos: |-
        !gh api --paginate graphql -F owner="$1" -f query='
              query($owner: String!, $per_page: Int = 100, $endCursor: String) {
                repositoryOwner(login: $owner) {
                  repositories(first: $per_page, after: $endCursor, ownerAffiliations: OWNER) {
                    nodes {
                      nameWithOwner
                    }
                    pageInfo {
                      hasNextPage
                      endCursor
                    }
                  }
                }
              }
            ' | jq -r ".data.repositoryOwner.repositories.nodes[] | [.nameWithOwner] | @tsv"
